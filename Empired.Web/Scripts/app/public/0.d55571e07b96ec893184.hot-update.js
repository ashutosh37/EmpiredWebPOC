webpackHotUpdate(0,{

/***/ "./Scripts/app/src/components/fileupload/FileUpload.jsx":
/*!**************************************************************!*\
  !*** ./Scripts/app/src/components/fileupload/FileUpload.jsx ***!
  \**************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _getPrototypeOf = __webpack_require__(/*! babel-runtime/core-js/object/get-prototype-of */ \"./node_modules/babel-runtime/core-js/object/get-prototype-of.js\");\n\nvar _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);\n\nvar _classCallCheck2 = __webpack_require__(/*! babel-runtime/helpers/classCallCheck */ \"./node_modules/babel-runtime/helpers/classCallCheck.js\");\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = __webpack_require__(/*! babel-runtime/helpers/createClass */ \"./node_modules/babel-runtime/helpers/createClass.js\");\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nvar _possibleConstructorReturn2 = __webpack_require__(/*! babel-runtime/helpers/possibleConstructorReturn */ \"./node_modules/babel-runtime/helpers/possibleConstructorReturn.js\");\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = __webpack_require__(/*! babel-runtime/helpers/inherits */ \"./node_modules/babel-runtime/helpers/inherits.js\");\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nvar _react = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _reactFontawesome = __webpack_require__(/*! @fortawesome/react-fontawesome */ \"./node_modules/@fortawesome/react-fontawesome/index.es.js\");\n\nvar _freeSolidSvgIcons = __webpack_require__(/*! @fortawesome/free-solid-svg-icons */ \"./node_modules/@fortawesome/free-solid-svg-icons/index.es.js\");\n\nvar _Services = __webpack_require__(/*! ../Common/Services */ \"./Scripts/app/src/components/Common/Services.jsx\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar FileUpload = function (_React$Component) {\n\t(0, _inherits3.default)(FileUpload, _React$Component);\n\n\tfunction FileUpload(props) {\n\t\t(0, _classCallCheck3.default)(this, FileUpload);\n\n\t\tvar _this = (0, _possibleConstructorReturn3.default)(this, (FileUpload.__proto__ || (0, _getPrototypeOf2.default)(FileUpload)).call(this, props));\n\n\t\t_this.GetBlobListFromServer = function () {\n\t\t\t(0, _Services.GetSaS)(function (response) {\n\t\t\t\tconsole.log(response);\n\t\t\t\tsessionStorage.setItem(\"sasToken\", response.SasToken);\n\t\t\t\tsessionStorage.setItem(\"containerName\", response.Container);\n\t\t\t\tsessionStorage.setItem(\"blobUri\", response.StorageAccount);\n\t\t\t\tvar containerName = response.Container;\n\t\t\t\tvar sasToken = response.SasToken;\n\t\t\t\tvar storageAccount = response.StorageAccount;\n\t\t\t\t_this.GetBlobList(containerName, sasToken, storageAccount);\n\t\t\t});\n\t\t};\n\n\t\t_this.GetBlobList = function (containerName, sasToken, storageAccount) {\n\t\t\tvar self = _this;\n\t\t\tvar blobService = AzureStorage.Blob.createBlobServiceWithSas(storageAccount, sasToken);\n\t\t\tblobService.listBlobsSegmented(containerName, null, function (error, results) {\n\t\t\t\tif (error) {\n\t\t\t\t\tconsole.log(error);\n\t\t\t\t} else {\n\t\t\t\t\tself.setState({ bloblist: [] });\n\t\t\t\t\tresults.entries.forEach(function (blob) {\n\n\t\t\t\t\t\tvar link = blobService.getUrl(containerName, blob.name, sasToken);\n\t\t\t\t\t\tself.setState({ bloblist: _this.state.bloblist.concat([{ name: blob.name, url: link }]) });\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\t\t};\n\n\t\t_this.displayProcess = function (process) {\n\t\t\tdocument.getElementById(\"uploadProgressBar\").style.width = process + '%';\n\t\t\tdocument.getElementById(\"uploadProgressBar\").innerHTML = process + '%';\n\t\t};\n\n\t\t_this.refreshProgress = function () {\n\t\t\tsetTimeout(function () {\n\t\t\t\tif (!finishedOrError) {\n\t\t\t\t\tvar process = speedSummary.getCompletePercent();\n\t\t\t\t\tdisplayProcess(process);\n\t\t\t\t\trefreshProgress();\n\t\t\t\t}\n\t\t\t}, 200);\n\t\t};\n\n\t\t_this.uploadBlob = function () {\n\t\t\tdisplayProcess(0);\n\t\t\tvar sasToken = sessionStorage.getItem(\"sasToken\");\n\t\t\tvar containerName = sessionStorage.getItem(\"containerName\");\n\t\t\tvar storageAccount = sessionStorage.getItem(\"blobUri\");\n\t\t\tvar blobService = AzureStorage.Blob.createBlobServiceWithSas(storageAccount, sasToken);\n\t\t\tdocument.getElementById(\"uploadProgressBarContainer\").classList.remove('hidden');\n\t\t\t// If one file has been selected in the HTML file input element\n\t\t\tvar file = $('#FileInput').get(0).files[0];\n\t\t\tconsole.log(file);\n\t\t\tvar customBlockSize = file.size > 1024 * 1024 * 32 ? 1024 * 1024 * 4 : 1024 * 512;\n\t\t\tblobService.singleBlobPutThresholdInBytes = customBlockSize;\n\n\t\t\tvar finishedOrError = false;\n\t\t\tvar speedSummary = blobService.createBlockBlobFromBrowserFile(containerName, file.name, file, { blockSize: customBlockSize }, function (error, result, response) {\n\t\t\t\tfinishedOrError = true;\n\t\t\t\tif (error) {\n\t\t\t\t\talert('Error');\n\t\t\t\t} else {\n\t\t\t\t\tdisplayProcess(100);\n\t\t\t\t\tvar link = blobService.getUrl(containerName, file.name, sasToken);\n\t\t\t\t\tself.setState({ bloblist: this.state.bloblist.concat([{ name: file.name, url: link }]) });\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t_this.refreshProgress();\n\t\t};\n\n\t\t_this.state = {\n\t\t\tuploading: false,\n\t\t\timages: [],\n\t\t\tbloblist: []\n\t\t};\n\t\treturn _this;\n\t}\n\n\t(0, _createClass3.default)(FileUpload, [{\n\t\tkey: 'componentDidMount',\n\t\tvalue: function componentDidMount() {\n\n\t\t\tvar self = this;\n\t\t\tvar sasToken = sessionStorage.getItem(\"sasToken\");\n\t\t\tvar containerName = sessionStorage.getItem(\"containerName\");\n\t\t\tvar storageAccount = sessionStorage.getItem(\"blobUri\");\n\t\t\tif (sasToken) {\n\t\t\t\tself.GetBlobList(containerName, sasToken, storageAccount);\n\t\t\t} else {\n\t\t\t\tself.GetBlobListFromServer();\n\t\t\t}\n\t\t}\n\t}, {\n\t\tkey: 'onchange',\n\t\tvalue: function onchange(e) {}\n\t}, {\n\t\tkey: 'render',\n\t\tvalue: function render() {\n\t\t\treturn _react2.default.createElement(\n\t\t\t\t'div',\n\t\t\t\t{ className: 'fadein' },\n\t\t\t\t_react2.default.createElement(\n\t\t\t\t\t'div',\n\t\t\t\t\t{ className: 'button' },\n\t\t\t\t\t_react2.default.createElement(\n\t\t\t\t\t\t'label',\n\t\t\t\t\t\t{ htmlFor: 'multi' },\n\t\t\t\t\t\t_react2.default.createElement(_reactFontawesome.FontAwesomeIcon, { icon: _freeSolidSvgIcons.faImages, color: '#6d84b4', size: '5x' })\n\t\t\t\t\t),\n\t\t\t\t\t_react2.default.createElement('input', { type: 'file', id: 'FileInput', multiple: true }),\n\t\t\t\t\t_react2.default.createElement(\n\t\t\t\t\t\t'button',\n\t\t\t\t\t\t{ type: 'button', value: 'Upload to Blob', 'class': 'btn btn-default', id: 'UploadBlob', onclick: function onclick(e) {\n\t\t\t\t\t\t\t\treturn uploadBlob(e);\n\t\t\t\t\t\t\t} },\n\t\t\t\t\t\t'Upload to Blob'\n\t\t\t\t\t),\n\t\t\t\t\t_react2.default.createElement(\n\t\t\t\t\t\t'div',\n\t\t\t\t\t\t{ 'class': 'form-group hidden', id: 'uploadProgressBarContainer' },\n\t\t\t\t\t\t'Uploading...',\n\t\t\t\t\t\t_react2.default.createElement(\n\t\t\t\t\t\t\t'div',\n\t\t\t\t\t\t\t{ 'class': 'progress' },\n\t\t\t\t\t\t\t_react2.default.createElement(\n\t\t\t\t\t\t\t\t'div',\n\t\t\t\t\t\t\t\t{ 'class': 'progress-bar', role: 'progressbar', id: 'uploadProgressBar', 'aria-valuenow': '60', 'aria-valuemin': '0', 'aria-valuemax': '100', style: 'width: 0%;' },\n\t\t\t\t\t\t\t\t'0%'\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t)\n\t\t\t\t\t)\n\t\t\t\t),\n\t\t\t\t_react2.default.createElement(\n\t\t\t\t\t'ul',\n\t\t\t\t\tnull,\n\t\t\t\t\tthis.state.bloblist.map(function (listitem, index) {\n\t\t\t\t\t\treturn _react2.default.createElement(\n\t\t\t\t\t\t\t'li',\n\t\t\t\t\t\t\t{ key: index },\n\t\t\t\t\t\t\t_react2.default.createElement(\n\t\t\t\t\t\t\t\t'a',\n\t\t\t\t\t\t\t\t{ href: listitem.url },\n\t\t\t\t\t\t\t\tlistitem.name\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t);\n\t\t\t\t\t})\n\t\t\t\t)\n\t\t\t);\n\t\t}\n\t}]);\n\treturn FileUpload;\n}(_react2.default.Component);\n\nexports.default = FileUpload;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./Scripts/app/src/components/fileupload/FileUpload.jsx\n");

/***/ })

})